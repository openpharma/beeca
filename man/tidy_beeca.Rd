% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tidy_beeca.R
\name{tidy_beeca}
\alias{tidy_beeca}
\title{Tidy a beeca/glm object}
\usage{
tidy_beeca(x, conf.int = FALSE, conf.level = 0.95, ...)
}
\arguments{
\item{x}{a 'glm' object created with \code{get_marginal_effect()}}

\item{conf.int}{a logical indicating whether to include confidence intervals}

\item{conf.level}{the confidence level to use for the confidence interval}
}
\value{
a tibble
}
\description{
The broom package exports a tidier for \code{"glm"} objects.
This function adds on top of that and returns more information
that is stored from g-computation.
}
\details{
The function also utilizes additional information stored when the
glm object is created with \code{get_marginal_effect()}.
It's recommended to always use this function with \code{get_marginal_effect()}.
}
\examples{
# example use of tidy_beeca
# Set treatment to a factor
trial01$trtp <- factor(trial01$trtp)

## Fit a logistic regression working model and pass it to beeca
fit1 <- glm(aval ~ trtp + bl_cov, family="binomial", data=trial01) |>
  get_marginal_effect(trt="trtp", method="Ye", contrast="diff")

# compare with broom tidy. one works on logistic model(working model)
# tidy_beeca tidies the analyses from g-computation
broom::tidy(fit1)
tidy_beeca(fit1)

# with confidence intervals
broom::tidy(fit1, conf.int = TRUE)
tidy_beeca(fit1, conf.int = TRUE)

}
